/* Generated By:JavaCC: Do not edit this line. eg1Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface eg1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int NEW = 11;
  /** RegularExpression Id. */
  int CLASS = 12;
  /** RegularExpression Id. */
  int INT = 13;
  /** RegularExpression Id. */
  int PUBLIC = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int STATIC = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int VOID = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int MAIN = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int PRINT = 23;
  /** RegularExpression Id. */
  int EXTENDS = 24;
  /** RegularExpression Id. */
  int LENGTH = 25;
  /** RegularExpression Id. */
  int RETURN = 26;
  /** RegularExpression Id. */
  int TRUE = 27;
  /** RegularExpression Id. */
  int THIS = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int IDENTIFIER = 30;
  /** RegularExpression Id. */
  int INTEGER = 31;
  /** RegularExpression Id. */
  int COMMA = 32;
  /** RegularExpression Id. */
  int STAR = 33;
  /** RegularExpression Id. */
  int LBRACE = 34;
  /** RegularExpression Id. */
  int ASSIGN = 35;
  /** RegularExpression Id. */
  int RBRACE = 36;
  /** RegularExpression Id. */
  int AND = 37;
  /** RegularExpression Id. */
  int LPAREN = 38;
  /** RegularExpression Id. */
  int LESS = 39;
  /** RegularExpression Id. */
  int RPAREN = 40;
  /** RegularExpression Id. */
  int PLUS = 41;
  /** RegularExpression Id. */
  int LBRACKET = 42;
  /** RegularExpression Id. */
  int MINUS = 43;
  /** RegularExpression Id. */
  int RBRACKET = 44;
  /** RegularExpression Id. */
  int PERIOD = 45;
  /** RegularExpression Id. */
  int NOT = 46;
  /** RegularExpression Id. */
  int SEMICOLON = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "<token of kind 6>",
    "\"*/\"",
    "\"//\"",
    "<SINGLE_LINE_COMMENT>",
    "<token of kind 10>",
    "\"new\"",
    "\"class\"",
    "\"int\"",
    "\"public\"",
    "\"boolean\"",
    "\"static\"",
    "\"if\"",
    "\"void\"",
    "\"else\"",
    "\"main\"",
    "\"while\"",
    "\"String\"",
    "\"System.out.println\"",
    "\"extends\"",
    "\"length\"",
    "\"return\"",
    "\"true\"",
    "\"this\"",
    "\"false\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "\",\"",
    "\"*\"",
    "\"{\"",
    "\"=\"",
    "\"}\"",
    "\"&&\"",
    "\"(\"",
    "\"<\"",
    "\")\"",
    "\"+\"",
    "\"[\"",
    "\"-\"",
    "\"]\"",
    "\".\"",
    "\"!\"",
    "\";\"",
  };

}
